// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent that suggests the most relevant service based on the user's inquiry.
 *
 * - suggestService - A function that suggests a service based on the inquiry.
 * - SuggestServiceInput - The input type for the suggestService function.
 * - SuggestServiceOutput - The return type for the suggestService function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestServiceInputSchema = z.object({
  inquiry: z.string().describe('The user inquiry description.'),
  services: z.array(z.string()).describe('A list of available services.'),
});
export type SuggestServiceInput = z.infer<typeof SuggestServiceInputSchema>;

const SuggestServiceOutputSchema = z.object({
  suggestedService: z
    .string()
    .describe('The most relevant service suggested by the AI.'),
});
export type SuggestServiceOutput = z.infer<typeof SuggestServiceOutputSchema>;

export async function suggestService(input: SuggestServiceInput): Promise<SuggestServiceOutput> {
  return suggestServiceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestServicePrompt',
  input: {schema: SuggestServiceInputSchema},
  output: {schema: SuggestServiceOutputSchema},
  prompt: `You are an AI assistant helping users find the right service for their needs.

  Given the following user inquiry:
  {{inquiry}}

  And the following list of available services:
  {{#each services}}- {{this}}\n{{/each}}

  Suggest the most relevant service from the list.  If none seem appropriate return "Other".`,
});

const suggestServiceFlow = ai.defineFlow(
  {
    name: 'suggestServiceFlow',
    inputSchema: SuggestServiceInputSchema,
    outputSchema: SuggestServiceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
